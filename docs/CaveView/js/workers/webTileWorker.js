!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";const t=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function s(){const s=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(t[255&s]+t[s>>8&255]+t[s>>16&255]+t[s>>24&255]+"-"+t[255&e]+t[e>>8&255]+"-"+t[e>>16&15|64]+t[e>>24&255]+"-"+t[63&i|128]+t[i>>8&255]+"-"+t[i>>16&255]+t[i>>24&255]+t[255&r]+t[r>>8&255]+t[r>>16&255]+t[r>>24&255]).toLowerCase()}function e(t,s,e){return Math.max(s,Math.min(e,t))}function i(t,s){switch(s.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function r(t,s){switch(s.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class n{constructor(t=0,s=0,e=0,i=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=e,this._w=i}static slerpFlat(t,s,e,i,r,n,h){let a=e[i+0],o=e[i+1],u=e[i+2],l=e[i+3];const c=r[n+0],m=r[n+1],d=r[n+2],y=r[n+3];if(0===h)return t[s+0]=a,t[s+1]=o,t[s+2]=u,void(t[s+3]=l);if(1===h)return t[s+0]=c,t[s+1]=m,t[s+2]=d,void(t[s+3]=y);if(l!==y||a!==c||o!==m||u!==d){let t=1-h;const s=a*c+o*m+u*d+l*y,e=s>=0?1:-1,i=1-s*s;if(i>Number.EPSILON){const r=Math.sqrt(i),n=Math.atan2(r,s*e);t=Math.sin(t*n)/r,h=Math.sin(h*n)/r}const r=h*e;if(a=a*t+c*r,o=o*t+m*r,u=u*t+d*r,l=l*t+y*r,t===1-h){const t=1/Math.sqrt(a*a+o*o+u*u+l*l);a*=t,o*=t,u*=t,l*=t}}t[s]=a,t[s+1]=o,t[s+2]=u,t[s+3]=l}static multiplyQuaternionsFlat(t,s,e,i,r,n){const h=e[i],a=e[i+1],o=e[i+2],u=e[i+3],l=r[n],c=r[n+1],m=r[n+2],d=r[n+3];return t[s]=h*d+u*l+a*m-o*c,t[s+1]=a*d+u*c+o*l-h*m,t[s+2]=o*d+u*m+h*c-a*l,t[s+3]=u*d-h*l-a*c-o*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,e,i){return this._x=t,this._y=s,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){const e=t._x,i=t._y,r=t._z,n=t._order,h=Math.cos,a=Math.sin,o=h(e/2),u=h(i/2),l=h(r/2),c=a(e/2),m=a(i/2),d=a(r/2);switch(n){case"XYZ":this._x=c*u*l+o*m*d,this._y=o*m*l-c*u*d,this._z=o*u*d+c*m*l,this._w=o*u*l-c*m*d;break;case"YXZ":this._x=c*u*l+o*m*d,this._y=o*m*l-c*u*d,this._z=o*u*d-c*m*l,this._w=o*u*l+c*m*d;break;case"ZXY":this._x=c*u*l-o*m*d,this._y=o*m*l+c*u*d,this._z=o*u*d+c*m*l,this._w=o*u*l-c*m*d;break;case"ZYX":this._x=c*u*l-o*m*d,this._y=o*m*l+c*u*d,this._z=o*u*d-c*m*l,this._w=o*u*l+c*m*d;break;case"YZX":this._x=c*u*l+o*m*d,this._y=o*m*l+c*u*d,this._z=o*u*d-c*m*l,this._w=o*u*l-c*m*d;break;case"XZY":this._x=c*u*l-o*m*d,this._y=o*m*l-c*u*d,this._z=o*u*d+c*m*l,this._w=o*u*l+c*m*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return!1!==s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const e=s/2,i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,e=s[0],i=s[4],r=s[8],n=s[1],h=s[5],a=s[9],o=s[2],u=s[6],l=s[10],c=e+h+l;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(u-a)*t,this._y=(r-o)*t,this._z=(n-i)*t}else if(e>h&&e>l){const t=2*Math.sqrt(1+e-h-l);this._w=(u-a)/t,this._x=.25*t,this._y=(i+n)/t,this._z=(r+o)/t}else if(h>l){const t=2*Math.sqrt(1+h-e-l);this._w=(r-o)/t,this._x=(i+n)/t,this._y=.25*t,this._z=(a+u)/t}else{const t=2*Math.sqrt(1+l-e-h);this._w=(n-i)/t,this._x=(r+o)/t,this._y=(a+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let e=t.dot(s)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(e(this.dot(t),-1,1)))}rotateTowards(t,s){const e=this.angleTo(t);if(0===e)return this;const i=Math.min(1,s/e);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const e=t._x,i=t._y,r=t._z,n=t._w,h=s._x,a=s._y,o=s._z,u=s._w;return this._x=e*u+n*h+i*o-r*a,this._y=i*u+n*a+r*h-e*o,this._z=r*u+n*o+e*a-i*h,this._w=n*u-e*h-i*a-r*o,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const e=this._x,i=this._y,r=this._z,n=this._w;let h=n*t._w+e*t._x+i*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=e,this._y=i,this._z=r,this;const a=1-h*h;if(a<=Number.EPSILON){const t=1-s;return this._w=t*n+s*this._w,this._x=t*e+s*this._x,this._y=t*i+s*this._y,this._z=t*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),u=Math.atan2(o,h),l=Math.sin((1-s)*u)/o,c=Math.sin(s*u)/o;return this._w=n*l+this._w*c,this._x=e*l+this._x*c,this._y=i*l+this._y*c,this._z=r*l+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,s,e){return this.copy(t).slerp(s,e)}random(){const t=Math.random(),s=Math.sqrt(1-t),e=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(i),e*Math.sin(r),e*Math.cos(r),s*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class h{constructor(t=0,s=0,e=0){h.prototype.isVector3=!0,this.x=t,this.y=s,this.z=e}set(t,s,e){return void 0===e&&(e=this.z),this.x=t,this.y=s,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(o.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(o.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,e=this.y,i=this.z,r=t.elements;return this.x=r[0]*s+r[3]*e+r[6]*i,this.y=r[1]*s+r[4]*e+r[7]*i,this.z=r[2]*s+r[5]*e+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,e=this.y,i=this.z,r=t.elements,n=1/(r[3]*s+r[7]*e+r[11]*i+r[15]);return this.x=(r[0]*s+r[4]*e+r[8]*i+r[12])*n,this.y=(r[1]*s+r[5]*e+r[9]*i+r[13])*n,this.z=(r[2]*s+r[6]*e+r[10]*i+r[14])*n,this}applyQuaternion(t){const s=this.x,e=this.y,i=this.z,r=t.x,n=t.y,h=t.z,a=t.w,o=a*s+n*i-h*e,u=a*e+h*s-r*i,l=a*i+r*e-n*s,c=-r*s-n*e-h*i;return this.x=o*a+c*-r+u*-h-l*-n,this.y=u*a+c*-n+l*-r-o*-h,this.z=l*a+c*-h+o*-n-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,e=this.y,i=this.z,r=t.elements;return this.x=r[0]*s+r[4]*e+r[8]*i,this.y=r[1]*s+r[5]*e+r[9]*i,this.z=r[2]*s+r[6]*e+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this.z=t.z+(s.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const e=t.x,i=t.y,r=t.z,n=s.x,h=s.y,a=s.z;return this.x=i*a-r*h,this.y=r*n-e*a,this.z=e*h-i*n,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const e=t.dot(this)/s;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return a.copy(this).projectOnVector(t),this.sub(a)}reflect(t){return this.sub(a.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(e(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y,i=this.z-t.z;return s*s+e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,e){const i=Math.sin(s)*t;return this.x=i*Math.sin(e),this.y=Math.cos(s)*t,this.z=i*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,e){return this.x=t*Math.sin(s),this.y=e,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=e,this.z=i,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),s=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(s),this.y=e*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const a=new h,o=new n;class u{constructor(t=0,s=0){u.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,e=this.y,i=t.elements;return this.x=i[0]*s+i[3]*e+i[6],this.y=i[1]*s+i[4]*e+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y;return s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const e=Math.cos(s),i=Math.sin(s),r=this.x-t.x,n=this.y-t.y;return this.x=r*e-n*i+t.x,this.y=r*i+n*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class l{constructor(t=new h(1/0,1/0,1/0),s=new h(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,e=1/0,i=1/0,r=-1/0,n=-1/0,h=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],u=t[a+1],l=t[a+2];o<s&&(s=o),u<e&&(e=u),l<i&&(i=l),o>r&&(r=o),u>n&&(n=u),l>h&&(h=l)}return this.min.set(s,e,i),this.max.set(r,n,h),this}setFromBufferAttribute(t){let s=1/0,e=1/0,i=1/0,r=-1/0,n=-1/0,h=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),u=t.getY(a),l=t.getZ(a);o<s&&(s=o),u<e&&(e=u),l<i&&(i=l),o>r&&(r=o),u>n&&(n=u),l>h&&(h=l)}return this.min.set(s,e,i),this.max.set(r,n,h),this}setFromPoints(t){this.makeEmpty();for(let s=0,e=t.length;s<e;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const e=m.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const e=t.geometry;if(void 0!==e)if(s&&null!=e.attributes&&void 0!==e.attributes.position){const s=e.attributes.position;for(let e=0,i=s.count;e<i;e++)m.fromBufferAttribute(s,e).applyMatrix4(t.matrixWorld),this.expandByPoint(m)}else null===e.boundingBox&&e.computeBoundingBox(),d.copy(e.boundingBox),d.applyMatrix4(t.matrixWorld),this.union(d);const i=t.children;for(let t=0,e=i.length;t<e;t++)this.expandByObject(i[t],s);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,m),m.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,e;return t.normal.x>0?(s=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),s<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(M),_.subVectors(this.max,M),y.subVectors(t.a,M),x.subVectors(t.b,M),p.subVectors(t.c,M),f.subVectors(x,y),g.subVectors(p,x),b.subVectors(y,p);let s=[0,-f.z,f.y,0,-g.z,g.y,0,-b.z,b.y,f.z,0,-f.x,g.z,0,-g.x,b.z,0,-b.x,-f.y,f.x,0,-g.y,g.x,0,-b.y,b.x,0];return!!A(s,y,x,p,_)&&(s=[1,0,0,0,1,0,0,0,1],!!A(s,y,x,p,_)&&(z.crossVectors(f,g),s=[z.x,z.y,z.z],A(s,y,x,p,_)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,m).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(m).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(c[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),c[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),c[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),c[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),c[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),c[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),c[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),c[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(c)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const c=[new h,new h,new h,new h,new h,new h,new h,new h],m=new h,d=new l,y=new h,x=new h,p=new h,f=new h,g=new h,b=new h,M=new h,_=new h,z=new h,w=new h;function A(t,s,e,i,r){for(let n=0,h=t.length-3;n<=h;n+=3){w.fromArray(t,n);const h=r.x*Math.abs(w.x)+r.y*Math.abs(w.y)+r.z*Math.abs(w.z),a=s.dot(w),o=e.dot(w),u=i.dot(w);if(Math.max(-Math.max(a,o,u),Math.min(a,o,u))>h)return!1}return!0}class S{addEventListener(t,s){void 0===this._listeners&&(this._listeners={});const e=this._listeners;void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(s)&&e[t].push(s)}hasEventListener(t,s){if(void 0===this._listeners)return!1;const e=this._listeners;return void 0!==e[t]&&-1!==e[t].indexOf(s)}removeEventListener(t,s){if(void 0===this._listeners)return;const e=this._listeners[t];if(void 0!==e){const t=e.indexOf(s);-1!==t&&e.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const s=this._listeners[t.type];if(void 0!==s){t.target=this;const e=s.slice(0);for(let s=0,i=e.length;s<i;s++)e[s].call(this,t);t.target=null}}}const v=new h,B=new u;class k{constructor(t,s,e=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=s,this.count=void 0!==t?t.length/s:0,this.normalized=e,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,e){t*=this.itemSize,e*=s.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=s.array[e+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let s=0,e=this.count;s<e;s++)B.fromBufferAttribute(this,s),B.applyMatrix3(t),this.setXY(s,B.x,B.y);else if(3===this.itemSize)for(let s=0,e=this.count;s<e;s++)v.fromBufferAttribute(this,s),v.applyMatrix3(t),this.setXYZ(s,v.x,v.y,v.z);return this}applyMatrix4(t){for(let s=0,e=this.count;s<e;s++)v.fromBufferAttribute(this,s),v.applyMatrix4(t),this.setXYZ(s,v.x,v.y,v.z);return this}applyNormalMatrix(t){for(let s=0,e=this.count;s<e;s++)v.fromBufferAttribute(this,s),v.applyNormalMatrix(t),this.setXYZ(s,v.x,v.y,v.z);return this}transformDirection(t){for(let s=0,e=this.count;s<e;s++)v.fromBufferAttribute(this,s),v.transformDirection(t),this.setXYZ(s,v.x,v.y,v.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){let s=this.array[t*this.itemSize];return this.normalized&&(s=i(s,this.array)),s}setX(t,s){return this.normalized&&(s=r(s,this.array)),this.array[t*this.itemSize]=s,this}getY(t){let s=this.array[t*this.itemSize+1];return this.normalized&&(s=i(s,this.array)),s}setY(t,s){return this.normalized&&(s=r(s,this.array)),this.array[t*this.itemSize+1]=s,this}getZ(t){let s=this.array[t*this.itemSize+2];return this.normalized&&(s=i(s,this.array)),s}setZ(t,s){return this.normalized&&(s=r(s,this.array)),this.array[t*this.itemSize+2]=s,this}getW(t){let s=this.array[t*this.itemSize+3];return this.normalized&&(s=i(s,this.array)),s}setW(t,s){return this.normalized&&(s=r(s,this.array)),this.array[t*this.itemSize+3]=s,this}setXY(t,s,e){return t*=this.itemSize,this.normalized&&(s=r(s,this.array),e=r(e,this.array)),this.array[t+0]=s,this.array[t+1]=e,this}setXYZ(t,s,e,i){return t*=this.itemSize,this.normalized&&(s=r(s,this.array),e=r(e,this.array),i=r(i,this.array)),this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this}setXYZW(t,s,e,i,n){return t*=this.itemSize,this.normalized&&(s=r(s,this.array),e=r(e,this.array),i=r(i,this.array),n=r(n,this.array)),this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class C extends k{constructor(t,s,e){super(new Uint16Array(t),s,e)}}class E extends k{constructor(t,s,e){super(new Uint32Array(t),s,e)}}class T extends k{constructor(t,s,e){super(new Float32Array(t),s,e)}}const F=new l,O=new h,R=new h;class W{constructor(t=new h,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const e=this.center;void 0!==s?e.copy(s):F.setFromPoints(t).getCenter(e);let i=0;for(let s=0,r=t.length;s<r;s++)i=Math.max(i,e.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const e=this.center.distanceToSquared(t);return s.copy(t),e>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;O.subVectors(t,this.center);const s=O.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),e=.5*(t-this.radius);this.center.addScaledVector(O,e/t),this.radius+=e}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(R.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(O.copy(t.center).add(R)),this.expandByPoint(O.copy(t.center).sub(R))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}class q{constructor(){q.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,s,e,i,r,n,h,a,o,u,l,c,m,d,y,x){const p=this.elements;return p[0]=t,p[4]=s,p[8]=e,p[12]=i,p[1]=r,p[5]=n,p[9]=h,p[13]=a,p[2]=o,p[6]=u,p[10]=l,p[14]=c,p[3]=m,p[7]=d,p[11]=y,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new q).fromArray(this.elements)}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}copyPosition(t){const s=this.elements,e=t.elements;return s[12]=e[12],s[13]=e[13],s[14]=e[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,e){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,s,e){return this.set(t.x,s.x,e.x,0,t.y,s.y,e.y,0,t.z,s.z,e.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,e=t.elements,i=1/P.setFromMatrixColumn(t,0).length(),r=1/P.setFromMatrixColumn(t,1).length(),n=1/P.setFromMatrixColumn(t,2).length();return s[0]=e[0]*i,s[1]=e[1]*i,s[2]=e[2]*i,s[3]=0,s[4]=e[4]*r,s[5]=e[5]*r,s[6]=e[6]*r,s[7]=0,s[8]=e[8]*n,s[9]=e[9]*n,s[10]=e[10]*n,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,e=t.x,i=t.y,r=t.z,n=Math.cos(e),h=Math.sin(e),a=Math.cos(i),o=Math.sin(i),u=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){const t=n*u,e=n*l,i=h*u,r=h*l;s[0]=a*u,s[4]=-a*l,s[8]=o,s[1]=e+i*o,s[5]=t-r*o,s[9]=-h*a,s[2]=r-t*o,s[6]=i+e*o,s[10]=n*a}else if("YXZ"===t.order){const t=a*u,e=a*l,i=o*u,r=o*l;s[0]=t+r*h,s[4]=i*h-e,s[8]=n*o,s[1]=n*l,s[5]=n*u,s[9]=-h,s[2]=e*h-i,s[6]=r+t*h,s[10]=n*a}else if("ZXY"===t.order){const t=a*u,e=a*l,i=o*u,r=o*l;s[0]=t-r*h,s[4]=-n*l,s[8]=i+e*h,s[1]=e+i*h,s[5]=n*u,s[9]=r-t*h,s[2]=-n*o,s[6]=h,s[10]=n*a}else if("ZYX"===t.order){const t=n*u,e=n*l,i=h*u,r=h*l;s[0]=a*u,s[4]=i*o-e,s[8]=t*o+r,s[1]=a*l,s[5]=r*o+t,s[9]=e*o-i,s[2]=-o,s[6]=h*a,s[10]=n*a}else if("YZX"===t.order){const t=n*a,e=n*o,i=h*a,r=h*o;s[0]=a*u,s[4]=r-t*l,s[8]=i*l+e,s[1]=l,s[5]=n*u,s[9]=-h*u,s[2]=-o*u,s[6]=e*l+i,s[10]=t-r*l}else if("XZY"===t.order){const t=n*a,e=n*o,i=h*a,r=h*o;s[0]=a*u,s[4]=-l,s[8]=o*u,s[1]=t*l+r,s[5]=n*u,s[9]=e*l-i,s[2]=i*l-e,s[6]=h*u,s[10]=r*l+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(U,t,V)}lookAt(t,s,e){const i=this.elements;return Y.subVectors(t,s),0===Y.lengthSq()&&(Y.z=1),Y.normalize(),X.crossVectors(e,Y),0===X.lengthSq()&&(1===Math.abs(e.z)?Y.x+=1e-4:Y.z+=1e-4,Y.normalize(),X.crossVectors(e,Y)),X.normalize(),Z.crossVectors(Y,X),i[0]=X.x,i[4]=Z.x,i[8]=Y.x,i[1]=X.y,i[5]=Z.y,i[9]=Y.y,i[2]=X.z,i[6]=Z.z,i[10]=Y.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,r=this.elements,n=e[0],h=e[4],a=e[8],o=e[12],u=e[1],l=e[5],c=e[9],m=e[13],d=e[2],y=e[6],x=e[10],p=e[14],f=e[3],g=e[7],b=e[11],M=e[15],_=i[0],z=i[4],w=i[8],A=i[12],S=i[1],v=i[5],B=i[9],k=i[13],C=i[2],E=i[6],T=i[10],F=i[14],O=i[3],R=i[7],W=i[11],q=i[15];return r[0]=n*_+h*S+a*C+o*O,r[4]=n*z+h*v+a*E+o*R,r[8]=n*w+h*B+a*T+o*W,r[12]=n*A+h*k+a*F+o*q,r[1]=u*_+l*S+c*C+m*O,r[5]=u*z+l*v+c*E+m*R,r[9]=u*w+l*B+c*T+m*W,r[13]=u*A+l*k+c*F+m*q,r[2]=d*_+y*S+x*C+p*O,r[6]=d*z+y*v+x*E+p*R,r[10]=d*w+y*B+x*T+p*W,r[14]=d*A+y*k+x*F+p*q,r[3]=f*_+g*S+b*C+M*O,r[7]=f*z+g*v+b*E+M*R,r[11]=f*w+g*B+b*T+M*W,r[15]=f*A+g*k+b*F+M*q,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[4],i=t[8],r=t[12],n=t[1],h=t[5],a=t[9],o=t[13],u=t[2],l=t[6],c=t[10],m=t[14];return t[3]*(+r*a*l-i*o*l-r*h*c+e*o*c+i*h*m-e*a*m)+t[7]*(+s*a*m-s*o*c+r*n*c-i*n*m+i*o*u-r*a*u)+t[11]*(+s*o*l-s*h*m-r*n*l+e*n*m+r*h*u-e*o*u)+t[15]*(-i*h*u-s*a*l+s*h*c+i*n*l-e*n*c+e*a*u)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,e){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=s,i[14]=e),this}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],u=t[8],l=t[9],c=t[10],m=t[11],d=t[12],y=t[13],x=t[14],p=t[15],f=l*x*o-y*c*o+y*a*m-h*x*m-l*a*p+h*c*p,g=d*c*o-u*x*o-d*a*m+n*x*m+u*a*p-n*c*p,b=u*y*o-d*l*o+d*h*m-n*y*m-u*h*p+n*l*p,M=d*l*a-u*y*a-d*h*c+n*y*c+u*h*x-n*l*x,_=s*f+e*g+i*b+r*M;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/_;return t[0]=f*z,t[1]=(y*c*r-l*x*r-y*i*m+e*x*m+l*i*p-e*c*p)*z,t[2]=(h*x*r-y*a*r+y*i*o-e*x*o-h*i*p+e*a*p)*z,t[3]=(l*a*r-h*c*r-l*i*o+e*c*o+h*i*m-e*a*m)*z,t[4]=g*z,t[5]=(u*x*r-d*c*r+d*i*m-s*x*m-u*i*p+s*c*p)*z,t[6]=(d*a*r-n*x*r-d*i*o+s*x*o+n*i*p-s*a*p)*z,t[7]=(n*c*r-u*a*r+u*i*o-s*c*o-n*i*m+s*a*m)*z,t[8]=b*z,t[9]=(d*l*r-u*y*r-d*e*m+s*y*m+u*e*p-s*l*p)*z,t[10]=(n*y*r-d*h*r+d*e*o-s*y*o-n*e*p+s*h*p)*z,t[11]=(u*h*r-n*l*r-u*e*o+s*l*o+n*e*m-s*h*m)*z,t[12]=M*z,t[13]=(u*y*i-d*l*i+d*e*c-s*y*c-u*e*x+s*l*x)*z,t[14]=(d*h*i-n*y*i-d*e*a+s*y*a+n*e*x-s*h*x)*z,t[15]=(n*l*i-u*h*i+u*e*a-s*l*a-n*e*c+s*h*c)*z,this}scale(t){const s=this.elements,e=t.x,i=t.y,r=t.z;return s[0]*=e,s[4]*=i,s[8]*=r,s[1]*=e,s[5]*=i,s[9]*=r,s[2]*=e,s[6]*=i,s[10]*=r,s[3]*=e,s[7]*=i,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,e,i))}makeTranslation(t,s,e){return this.set(1,0,0,t,0,1,0,s,0,0,1,e,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,s,-e,0,0,e,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,0,e,0,0,1,0,0,-e,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,0,e,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const e=Math.cos(s),i=Math.sin(s),r=1-e,n=t.x,h=t.y,a=t.z,o=r*n,u=r*h;return this.set(o*n+e,o*h-i*a,o*a+i*h,0,o*h+i*a,u*h+e,u*a-i*n,0,o*a-i*h,u*a+i*n,r*a*a+e,0,0,0,0,1),this}makeScale(t,s,e){return this.set(t,0,0,0,0,s,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,s,e,i,r,n){return this.set(1,e,r,0,t,1,n,0,s,i,1,0,0,0,0,1),this}compose(t,s,e){const i=this.elements,r=s._x,n=s._y,h=s._z,a=s._w,o=r+r,u=n+n,l=h+h,c=r*o,m=r*u,d=r*l,y=n*u,x=n*l,p=h*l,f=a*o,g=a*u,b=a*l,M=e.x,_=e.y,z=e.z;return i[0]=(1-(y+p))*M,i[1]=(m+b)*M,i[2]=(d-g)*M,i[3]=0,i[4]=(m-b)*_,i[5]=(1-(c+p))*_,i[6]=(x+f)*_,i[7]=0,i[8]=(d+g)*z,i[9]=(x-f)*z,i[10]=(1-(c+y))*z,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,s,e){const i=this.elements;let r=P.set(i[0],i[1],i[2]).length();const n=P.set(i[4],i[5],i[6]).length(),h=P.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],N.copy(this);const a=1/r,o=1/n,u=1/h;return N.elements[0]*=a,N.elements[1]*=a,N.elements[2]*=a,N.elements[4]*=o,N.elements[5]*=o,N.elements[6]*=o,N.elements[8]*=u,N.elements[9]*=u,N.elements[10]*=u,s.setFromRotationMatrix(N),e.x=r,e.y=n,e.z=h,this}makePerspective(t,s,e,i,r,n){const h=this.elements,a=2*r/(s-t),o=2*r/(e-i),u=(s+t)/(s-t),l=(e+i)/(e-i),c=-(n+r)/(n-r),m=-2*n*r/(n-r);return h[0]=a,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=o,h[9]=l,h[13]=0,h[2]=0,h[6]=0,h[10]=c,h[14]=m,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,s,e,i,r,n){const h=this.elements,a=1/(s-t),o=1/(e-i),u=1/(n-r),l=(s+t)*a,c=(e+i)*o,m=(n+r)*u;return h[0]=2*a,h[4]=0,h[8]=0,h[12]=-l,h[1]=0,h[5]=2*o,h[9]=0,h[13]=-c,h[2]=0,h[6]=0,h[10]=-2*u,h[14]=-m,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const s=this.elements,e=t.elements;for(let t=0;t<16;t++)if(s[t]!==e[t])return!1;return!0}fromArray(t,s=0){for(let e=0;e<16;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t[s+9]=e[9],t[s+10]=e[10],t[s+11]=e[11],t[s+12]=e[12],t[s+13]=e[13],t[s+14]=e[14],t[s+15]=e[15],t}}const P=new h,N=new q,U=new h(0,0,0),V=new h(1,1,1),X=new h,Z=new h,Y=new h,D=new q,j=new n;class I{constructor(t=0,s=0,e=0,i=I.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=s,this._z=e,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,e,i=this._order){return this._x=t,this._y=s,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const r=t.elements,n=r[0],h=r[4],a=r[8],o=r[1],u=r[5],l=r[9],c=r[2],m=r[6],d=r[10];switch(s){case"XYZ":this._y=Math.asin(e(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-h,n)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-e(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,u)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(e(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-h,u)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-e(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(m,d),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-h,u));break;case"YZX":this._z=Math.asin(e(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,u),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-e(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,s,e){return D.makeRotationFromQuaternion(t),this.setFromRotationMatrix(D,s,e)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return j.setFromEuler(this),this.setFromQuaternion(j,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}I.DEFAULT_ORDER="XYZ";class L{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}class G{constructor(){G.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,s,e,i,r,n,h,a,o){const u=this.elements;return u[0]=t,u[1]=i,u[2]=h,u[3]=s,u[4]=r,u[5]=a,u[6]=e,u[7]=n,u[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}extractBasis(t,s,e){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,r=this.elements,n=e[0],h=e[3],a=e[6],o=e[1],u=e[4],l=e[7],c=e[2],m=e[5],d=e[8],y=i[0],x=i[3],p=i[6],f=i[1],g=i[4],b=i[7],M=i[2],_=i[5],z=i[8];return r[0]=n*y+h*f+a*M,r[3]=n*x+h*g+a*_,r[6]=n*p+h*b+a*z,r[1]=o*y+u*f+l*M,r[4]=o*x+u*g+l*_,r[7]=o*p+u*b+l*z,r[2]=c*y+m*f+d*M,r[5]=c*x+m*g+d*_,r[8]=c*p+m*b+d*z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],u=t[8];return s*n*u-s*h*o-e*r*u+e*h*a+i*r*o-i*n*a}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],u=t[8],l=u*n-h*o,c=h*a-u*r,m=o*r-n*a,d=s*l+e*c+i*m;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const y=1/d;return t[0]=l*y,t[1]=(i*o-u*e)*y,t[2]=(h*e-i*n)*y,t[3]=c*y,t[4]=(u*s-i*a)*y,t[5]=(i*r-h*s)*y,t[6]=m*y,t[7]=(e*a-o*s)*y,t[8]=(n*s-e*r)*y,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,e,i,r,n,h){const a=Math.cos(r),o=Math.sin(r);return this.set(e*a,e*o,-e*(a*n+o*h)+n+t,-i*o,i*a,-i*(-o*n+a*h)+h+s,0,0,1),this}scale(t,s){return this.premultiply(H.makeScale(t,s)),this}rotate(t){return this.premultiply(H.makeRotation(-t)),this}translate(t,s){return this.premultiply(H.makeTranslation(t,s)),this}makeTranslation(t,s){return this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,e,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,e=t.elements;for(let t=0;t<9;t++)if(s[t]!==e[t])return!1;return!0}fromArray(t,s=0){for(let e=0;e<9;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const H=new G;let Q=0;const J=new h,$=new n,K=new q,tt=new h,st=new h,et=new h,it=new n,rt=new h(1,0,0),nt=new h(0,1,0),ht=new h(0,0,1),at={type:"added"},ot={type:"removed"};class ut extends S{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Q++}),this.uuid=s(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ut.DEFAULT_UP.clone();const t=new h,e=new I,i=new n,r=new h(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new q},normalMatrix:{value:new G}}),this.matrix=new q,this.matrixWorld=new q,this.matrixAutoUpdate=ut.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new L,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return $.setFromAxisAngle(t,s),this.quaternion.multiply($),this}rotateOnWorldAxis(t,s){return $.setFromAxisAngle(t,s),this.quaternion.premultiply($),this}rotateX(t){return this.rotateOnAxis(rt,t)}rotateY(t){return this.rotateOnAxis(nt,t)}rotateZ(t){return this.rotateOnAxis(ht,t)}translateOnAxis(t,s){return J.copy(t).applyQuaternion(this.quaternion),this.position.add(J.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(rt,t)}translateY(t){return this.translateOnAxis(nt,t)}translateZ(t){return this.translateOnAxis(ht,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(K.copy(this.matrixWorld).invert())}lookAt(t,s,e){t.isVector3?tt.copy(t):tt.set(t,s,e);const i=this.parent;this.updateWorldMatrix(!0,!1),st.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?K.lookAt(st,tt,this.up):K.lookAt(tt,st,this.up),this.quaternion.setFromRotationMatrix(K),i&&(K.extractRotation(i.matrixWorld),$.setFromRotationMatrix(K),this.quaternion.premultiply($.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(at)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const s=this.children.indexOf(t);return-1!==s&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(ot)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const s=this.children[t];s.parent=null,s.dispatchEvent(ot)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),K.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),K.multiply(t.parent.matrixWorld)),t.applyMatrix4(K),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let e=0,i=this.children.length;e<i;e++){const i=this.children[e].getObjectByProperty(t,s);if(void 0!==i)return i}}getObjectsByProperty(t,s){let e=[];this[t]===s&&e.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(t,s);r.length>0&&(e=e.concat(r))}return e}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(st,t,et),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(st,it,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverseVisible(t)}traverseAncestors(t){const s=this.parent;null!==s&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let e=0,i=s.length;e<i;e++){const i=s[e];!0!==i.matrixWorldAutoUpdate&&!0!==t||i.updateMatrixWorld(t)}}updateWorldMatrix(t,s){const e=this.parent;if(!0===t&&null!==e&&!0===e.matrixWorldAutoUpdate&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===s){const t=this.children;for(let s=0,e=t.length;s<e;s++){const e=t[s];!0===e.matrixWorldAutoUpdate&&e.updateWorldMatrix(!1,!0)}}}toJSON(t){const s=void 0===t||"string"==typeof t,e={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(s,e){return void 0===s[e.uuid]&&(s[e.uuid]=e.toJSON(t)),e.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){const e=s.shapes;if(Array.isArray(e))for(let s=0,i=e.length;s<i;s++){const i=e[s];r(t.shapes,i)}else r(t.shapes,e)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const s=[];for(let e=0,i=this.material.length;e<i;e++)s.push(r(t.materials,this.material[e]));i.material=s}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let s=0;s<this.children.length;s++)i.children.push(this.children[s].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let s=0;s<this.animations.length;s++){const e=this.animations[s];i.animations.push(r(t.animations,e))}}if(s){const s=n(t.geometries),i=n(t.materials),r=n(t.textures),h=n(t.images),a=n(t.shapes),o=n(t.skeletons),u=n(t.animations),l=n(t.nodes);s.length>0&&(e.geometries=s),i.length>0&&(e.materials=i),r.length>0&&(e.textures=r),h.length>0&&(e.images=h),a.length>0&&(e.shapes=a),o.length>0&&(e.skeletons=o),u.length>0&&(e.animations=u),l.length>0&&(e.nodes=l)}return e.object=i,e;function n(t){const s=[];for(const e in t){const i=t[e];delete i.metadata,s.push(i)}return s}}clone(t){return(new this.constructor).copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===s)for(let s=0;s<t.children.length;s++){const e=t.children[s];this.add(e.clone())}return this}}ut.DEFAULT_UP=new h(0,1,0),ut.DEFAULT_MATRIX_AUTO_UPDATE=!0,ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let lt=0;const ct=new q,mt=new ut,dt=new h,yt=new l,xt=new l,pt=new h;class ft extends S{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:lt++}),this.uuid=s(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(function(t){for(let s=t.length-1;s>=0;--s)if(t[s]>=65535)return!0;return!1}(t)?E:C)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,s){return this.attributes[t]=s,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,s,e=0){this.groups.push({start:t,count:s,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,s){this.drawRange.start=t,this.drawRange.count=s}applyMatrix4(t){const s=this.attributes.position;void 0!==s&&(s.applyMatrix4(t),s.needsUpdate=!0);const e=this.attributes.normal;if(void 0!==e){const s=(new G).getNormalMatrix(t);e.applyNormalMatrix(s),e.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return ct.makeRotationFromQuaternion(t),this.applyMatrix4(ct),this}rotateX(t){return ct.makeRotationX(t),this.applyMatrix4(ct),this}rotateY(t){return ct.makeRotationY(t),this.applyMatrix4(ct),this}rotateZ(t){return ct.makeRotationZ(t),this.applyMatrix4(ct),this}translate(t,s,e){return ct.makeTranslation(t,s,e),this.applyMatrix4(ct),this}scale(t,s,e){return ct.makeScale(t,s,e),this.applyMatrix4(ct),this}lookAt(t){return mt.lookAt(t),mt.updateMatrix(),this.applyMatrix4(mt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(dt).negate(),this.translate(dt.x,dt.y,dt.z),this}setFromPoints(t){const s=[];for(let e=0,i=t.length;e<i;e++){const i=t[e];s.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new T(s,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new l);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new h(-1/0,-1/0,-1/0),new h(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),s)for(let t=0,e=s.length;t<e;t++){const e=s[t];yt.setFromBufferAttribute(e),this.morphTargetsRelative?(pt.addVectors(this.boundingBox.min,yt.min),this.boundingBox.expandByPoint(pt),pt.addVectors(this.boundingBox.max,yt.max),this.boundingBox.expandByPoint(pt)):(this.boundingBox.expandByPoint(yt.min),this.boundingBox.expandByPoint(yt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new W);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new h,1/0);if(t){const e=this.boundingSphere.center;if(yt.setFromBufferAttribute(t),s)for(let t=0,e=s.length;t<e;t++){const e=s[t];xt.setFromBufferAttribute(e),this.morphTargetsRelative?(pt.addVectors(yt.min,xt.min),yt.expandByPoint(pt),pt.addVectors(yt.max,xt.max),yt.expandByPoint(pt)):(yt.expandByPoint(xt.min),yt.expandByPoint(xt.max))}yt.getCenter(e);let i=0;for(let s=0,r=t.count;s<r;s++)pt.fromBufferAttribute(t,s),i=Math.max(i,e.distanceToSquared(pt));if(s)for(let r=0,n=s.length;r<n;r++){const n=s[r],h=this.morphTargetsRelative;for(let s=0,r=n.count;s<r;s++)pt.fromBufferAttribute(n,s),h&&(dt.fromBufferAttribute(t,s),pt.add(dt)),i=Math.max(i,e.distanceToSquared(pt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,s=this.attributes;if(null===t||void 0===s.position||void 0===s.normal||void 0===s.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const e=t.array,i=s.position.array,r=s.normal.array,n=s.uv.array,a=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new k(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let t=0;t<a;t++)l[t]=new h,c[t]=new h;const m=new h,d=new h,y=new h,x=new u,p=new u,f=new u,g=new h,b=new h;function M(t,s,e){m.fromArray(i,3*t),d.fromArray(i,3*s),y.fromArray(i,3*e),x.fromArray(n,2*t),p.fromArray(n,2*s),f.fromArray(n,2*e),d.sub(m),y.sub(m),p.sub(x),f.sub(x);const r=1/(p.x*f.y-f.x*p.y);isFinite(r)&&(g.copy(d).multiplyScalar(f.y).addScaledVector(y,-p.y).multiplyScalar(r),b.copy(y).multiplyScalar(p.x).addScaledVector(d,-f.x).multiplyScalar(r),l[t].add(g),l[s].add(g),l[e].add(g),c[t].add(b),c[s].add(b),c[e].add(b))}let _=this.groups;0===_.length&&(_=[{start:0,count:e.length}]);for(let t=0,s=_.length;t<s;++t){const s=_[t],i=s.start;for(let t=i,r=i+s.count;t<r;t+=3)M(e[t+0],e[t+1],e[t+2])}const z=new h,w=new h,A=new h,S=new h;function v(t){A.fromArray(r,3*t),S.copy(A);const s=l[t];z.copy(s),z.sub(A.multiplyScalar(A.dot(s))).normalize(),w.crossVectors(S,s);const e=w.dot(c[t])<0?-1:1;o[4*t]=z.x,o[4*t+1]=z.y,o[4*t+2]=z.z,o[4*t+3]=e}for(let t=0,s=_.length;t<s;++t){const s=_[t],i=s.start;for(let t=i,r=i+s.count;t<r;t+=3)v(e[t+0]),v(e[t+1]),v(e[t+2])}}computeVertexNormals(){const t=this.index,s=this.getAttribute("position");if(void 0!==s){let e=this.getAttribute("normal");if(void 0===e)e=new k(new Float32Array(3*s.count),3),this.setAttribute("normal",e);else for(let t=0,s=e.count;t<s;t++)e.setXYZ(t,0,0,0);const i=new h,r=new h,n=new h,a=new h,o=new h,u=new h,l=new h,c=new h;if(t)for(let h=0,m=t.count;h<m;h+=3){const m=t.getX(h+0),d=t.getX(h+1),y=t.getX(h+2);i.fromBufferAttribute(s,m),r.fromBufferAttribute(s,d),n.fromBufferAttribute(s,y),l.subVectors(n,r),c.subVectors(i,r),l.cross(c),a.fromBufferAttribute(e,m),o.fromBufferAttribute(e,d),u.fromBufferAttribute(e,y),a.add(l),o.add(l),u.add(l),e.setXYZ(m,a.x,a.y,a.z),e.setXYZ(d,o.x,o.y,o.z),e.setXYZ(y,u.x,u.y,u.z)}else for(let t=0,h=s.count;t<h;t+=3)i.fromBufferAttribute(s,t+0),r.fromBufferAttribute(s,t+1),n.fromBufferAttribute(s,t+2),l.subVectors(n,r),c.subVectors(i,r),l.cross(c),e.setXYZ(t+0,l.x,l.y,l.z),e.setXYZ(t+1,l.x,l.y,l.z),e.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let s=0,e=t.count;s<e;s++)pt.fromBufferAttribute(t,s),pt.normalize(),t.setXYZ(s,pt.x,pt.y,pt.z)}toNonIndexed(){function t(t,s){const e=t.array,i=t.itemSize,r=t.normalized,n=new e.constructor(s.length*i);let h=0,a=0;for(let r=0,o=s.length;r<o;r++){h=t.isInterleavedBufferAttribute?s[r]*t.data.stride+t.offset:s[r]*i;for(let t=0;t<i;t++)n[a++]=e[h++]}return new k(n,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const s=new ft,e=this.index.array,i=this.attributes;for(const r in i){const n=t(i[r],e);s.setAttribute(r,n)}const r=this.morphAttributes;for(const i in r){const n=[],h=r[i];for(let s=0,i=h.length;s<i;s++){const i=t(h[s],e);n.push(i)}s.morphAttributes[i]=n}s.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let t=0,e=n.length;t<e;t++){const e=n[t];s.addGroup(e.start,e.count,e.materialIndex)}return s}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const s=this.parameters;for(const e in s)void 0!==s[e]&&(t[e]=s[e]);return t}t.data={attributes:{}};const s=this.index;null!==s&&(t.data.index={type:s.array.constructor.name,array:Array.prototype.slice.call(s.array)});const e=this.attributes;for(const s in e){const i=e[s];t.data.attributes[s]=i.toJSON(t.data)}const i={};let r=!1;for(const s in this.morphAttributes){const e=this.morphAttributes[s],n=[];for(let s=0,i=e.length;s<i;s++){const i=e[s];n.push(i.toJSON(t.data))}n.length>0&&(i[s]=n,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const h=this.boundingSphere;return null!==h&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const s={};this.name=t.name;const e=t.index;null!==e&&this.setIndex(e.clone(s));const i=t.attributes;for(const t in i){const e=i[t];this.setAttribute(t,e.clone(s))}const r=t.morphAttributes;for(const t in r){const e=[],i=r[t];for(let t=0,r=i.length;t<r;t++)e.push(i[t].clone(s));this.morphAttributes[t]=e}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let t=0,s=n.length;t<s;t++){const s=n[t];this.addGroup(s.start,s.count,s.materialIndex)}const h=t.boundingBox;null!==h&&(this.boundingBox=h.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}class gt extends ft{constructor(t,s,e,i,r){super(),this.type="FlatTileGeometry";const n=[],a=[];n.push(i.x,i.y-s,r),n.push(i.x,i.y,r),n.push(i.x+t,i.y,r),n.push(i.x+t,i.y-s,r),a.push(e.left/e.terrainWidth,e.bottom/e.terrainHeight),a.push(e.left/e.terrainWidth,1-e.top/e.terrainHeight),a.push(1-e.right/e.terrainWidth,1-e.top/e.terrainHeight),a.push(1-e.right/e.terrainWidth,e.bottom/e.terrainHeight),this.boundingBox=new l(new h(i.x,i.y-s,0),new h(i.x+t,i.y,0)),this.setIndex([0,2,1,0,3,2]),this.setAttribute("position",new T(n,3)),this.setAttribute("uv",new T(a,2)),this.computeVertexNormals()}}class bt{constructor(t){const s=t.tileSet,e=t.clip;let i,r,n;if(t.z>s.maxZoom){const h=Math.pow(2,t.z-s.maxZoom);i=Math.floor(t.x/h),r=Math.floor(t.y/h),n=s.maxZoom;const a=s.divisions,o=a*(t.x%h)/h,u=(a+1)*(a*(t.y%h))/h;e.dtmOffset=u+o,e.dtmWidth=a+1}else i=t.x,r=t.y,n=t.z,e.dtmOffset=0;const h=`${s.directory}/${n}/DTM-${i}-${r}.bin`;return fetch(h).then((t=>{if(!t.ok)throw TypeError;return t.arrayBuffer()}))}}class Mt extends ft{constructor(t,s,e,i,r,n,a,o){super(),this.type="TerrainTileGeometry";const u=e,c=i,m=u+1,d=c+1,y=t/u,x=s/c,p=[],f=[],g=[];let b=1/0,M=-1/0;void 0===a.dtmWidth&&(a.dtmWidth=a.terrainWidth+1);const _=m+a.left,z=d+a.top,w=o.z,A=o.x;let S,v,B=o.y;for(let t=a.top;t<z;t++){v=A,S=t*a.dtmWidth+a.left+a.dtmOffset;for(let s=a.left;s<_;s++){const e=r[S++]/n-w;f.push(v,B,e),e<b&&(b=e),e>M&&(M=e),g.push(s/a.terrainWidth),g.push(1-t/a.terrainHeight),v+=y}B-=x}this.boundingBox=new l(new h(o.x,o.y-s,b),new h(o.x+t,o.y,M));for(let t=0;t<c;t++)for(let s=0;s<u;s++){const e=s+m*t,i=s+m*(t+1),r=s+1+m*(t+1),n=s+1+m*t;Math.abs(f[3*e+2]-f[3*n+2])<Math.abs(f[3*i+2]-f[3*r+2])?(p.push(e,i,n),p.push(i,r,n)):(p.push(e,i,r),p.push(r,n,e))}this.setIndex(p),this.setAttribute("position",new T(f,3)),this.setAttribute("uv",new T(g,2)),this.computeVertexNormals()}}const _t=6378137*Math.PI;let zt;function wt(t){const s=zt.tileSet;let e;if("dzz"===s.encoding){const i=s.divisions+1;e=function(t,s){const e=new Uint8Array(t),i=new Uint32Array(s),r=e.length;if(4===r)return i;let n=0,h=0;for(let t=0;t<r;t++){let s=0,r=0,a=e[t];for(;128&a;)s|=(127&a)<<r,r+=7,a=e[++t];s|=a<<r,n+=1&s?s>>1^-1:s>>1,i[h++]=n}return i}(t,i*i)}else e=new Uint16Array(t);switch(zt.request){case"tile":!function(t){const s=zt.clip,e=zt.offsets,i=zt.tileSet,r=zt.divisions,n=r-s.left-s.right,h=r-s.top-s.bottom,a=zt.resolution,o=a*n,u=a*h;let l;s.terrainHeight=r,s.terrainWidth=r,e.x=a*(zt.x*r+s.left)-_t-e.x,e.y=_t-a*(zt.y*r+s.top)-e.y,l=i.isFlat?new gt(o,u,s,e,zt.flatZ):new Mt(o,u,n,h,t,i.dtmScale,s,e);const c=l.boundingBox,m={min:{x:c.min.x,y:c.min.y,z:c.min.z},max:{x:c.max.x,y:c.max.y,z:c.max.z}},d=[],y=l.attributes,x=l.index;for(const t in y)d.push(y[t].array.buffer);d.push(x.array.buffer),postMessage({status:"ok",index:x,attributes:y,boundingBox:m,canZoom:!0},d)}(e);break;case"height":!function(t){const s=zt.dataOffsets,e=zt.points,i=s.length;for(let r=0;r<i;r++)e[r].z=t[s[r]]/zt.tileSet.dtmScale;postMessage({status:"ok",points:e})}(e);break;default:console.log("webTileWorker: unknown request type"),postMessage({status:"nomap"})}}onmessage=function(t){zt=t.data;zt.tileSet.isFlat?wt(null):new bt(zt).then((t=>wt(t))).catch((()=>{postMessage({status:"nomap"})}))}}));
